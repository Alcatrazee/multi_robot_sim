<?xml version="1.0"?>
<robot  xmlns:xacro="http://www.ros.org/wiki/xacro" 
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
        xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
        xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
    name="robot_xacro">
    <xacro:property name="length_wheel" value="0.05" />
    <xacro:property name="radius_wheel" value="0.05" />
    <xacro:property name="ns" value="$(arg ns)/" />
    <xacro:macro name="default_inertial" params="mass">
               <inertial>
                       <mass value="${mass}" />
                       <inertia ixx="0.0045" ixy="0" ixz="0" iyy="0.0045" iyz="0" izz="0.0045" />
               </inertial>
    </xacro:macro>

    <link name="${ns}base_footprint">
        <visual>
            <geometry>
                    <box size="0.001 0.001 0.001"/>
                </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>
        <xacro:default_inertial mass="0.0001"/>
    </link>
    
    <joint name="${ns}base_footprint_joint" type="fixed">
        <origin xyz="0 0 0" />
        <parent link="${ns}base_footprint" />
        <child link="${ns}base_link" />
    </joint>


    <link name="${ns}base_link">
        <visual>
            <geometry>
                    <box size="0.2 0.3 0.1"/>
            </geometry>
            <origin rpy="0 0 1.571" xyz="0 0 0.00"/>
            <material name="white">
                <color rgba="1 1 1 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                    <box size="0.2 0.3 0.1"/>
            </geometry>
            <origin rpy="0 0 1.571" xyz="0 0 0.00"/>
        </collision>
        <inertial>
            <mass value="35" />
            <inertia ixx="0.45" ixy="0.000" ixz="0.000" iyy="0.55" iyz="0.000" izz="0.6125" />
        </inertial>
    </link>

    <link name="${ns}wheel_1">
        <visual>
                <geometry>
                    <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
                </geometry>
            <!-- <origin rpy="0 1.5 0" xyz="0.1 0.1 0"/> -->
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="black">
                <color rgba="0 0 0 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                    <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
            </geometry>
        </collision>
        <xacro:default_inertial mass="4.3542"/>
    </link>

    <link name="${ns}wheel_2">
        <visual>
                <geometry>
                    <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
                </geometry>
            <!-- <origin rpy="0 1.5 0" xyz="-0.1 0.1 0"/> -->
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                    <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
            </geometry>
        </collision>
        <xacro:default_inertial mass="4.3542"/>

    </link>

    <link name="${ns}front_omni">
        <visual>
                <geometry>
                    <sphere radius="0.0125"/>
                </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                   <sphere radius="0.0124"/>
            </geometry>
            <surface>
              <friction>
                <ode>
                  <mu>0</mu>
                  <mu2>0</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
        </collision>
        <xacro:default_inertial mass="1"/>
    </link>

    <link name="${ns}back_omni">
        <visual>
                <geometry>
                    <sphere radius="0.0125"/>
                </geometry>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                   <sphere radius="0.0124"/>
            </geometry>
            <surface>
              <friction>
                <ode>
                  <mu>0</mu>
                  <mu2>0</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
        </collision>
        <xacro:default_inertial mass="1"/>
    </link>
    
    <link name="${ns}hokuyo_link">

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://multiple_rb_ctrl/urdf/hokuyo.dae" />
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.05 0.05 0.07" />
            </geometry>

        </collision>

        <inertial>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0 " />
        </inertial>

    </link>

    <joint name="${ns}base_to_wheel1" type="continuous">
        <parent link="${ns}base_link"/>
        <child link="${ns}wheel_1"/>
        <origin rpy="-1.5707 0 0" xyz="0.0 -0.09 -0.0125"/>
        <axis xyz="0 0 1" />
    </joint>

    <joint name="${ns}base_to_wheel2" type="continuous">
        <axis xyz="0 0 1" />
        <parent link="${ns}base_link"/>
        <child link="${ns}wheel_2"/>
        <origin rpy="-1.5707 0 0" xyz="-0.0 0.09 -0.0125"/>
    </joint>

    <joint name="${ns}base_to_front_omni" type="fixed">
        <parent link="${ns}base_link"/>
        <child link="${ns}front_omni"/>
        <origin rpy="0 0 0" xyz="0.10 0 -0.05"/>
    </joint>

    <joint name="${ns}base_to_back_omni" type="fixed">
        <parent link="${ns}base_link"/>
        <child link="${ns}back_omni"/>
        <origin rpy="0 0 0" xyz="-0.10 0 -0.05"/>
    </joint>   


    <joint name="${ns}base_to_laser" type="fixed">
        <parent link="${ns}base_link"/>
        <child link="${ns}hokuyo_link"/>
        <axis xyz="0 1 0" />
        <origin xyz="0.125 0.0 0.085" rpy="0 0 0"/>
    </joint>
 
        <gazebo reference="${ns}base_link">
        <material>Gazebo/Orange</material>
    </gazebo>

    <gazebo reference="${ns}wheel_1">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="${ns}wheel_2">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="${ns}front_omni">
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="${ns}back_omni">
        <material>Gazebo/Grey</material>
    </gazebo>


    <gazebo>
        <plugin name="${ns}gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>${ns}</robotNamespace>
<!--             <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>true</legacyModeNS> -->
        </plugin>
    </gazebo>

    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>100</updateRate>
            <leftJoint>${ns}base_to_wheel1</leftJoint>
            <rightJoint>${ns}base_to_wheel2</rightJoint>
            <wheelSeparation>0.18</wheelSeparation>
            <wheelDiameter>${radius_wheel}</wheelDiameter>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <publishWheelTF>true</publishWheelTF>
            <publishOdomTF>true</publishOdomTF>
            <wheelTorque>10</wheelTorque>
            <legacyMode>true</legacyMode>
            <publishWheelJointState>true</publishWheelJointState>
            <wheelAcceleration>2</wheelAcceleration>
            <robotBaseFrame>base_link</robotBaseFrame>
            <publishTF>true</publishTF>
        </plugin>
    </gazebo>
    <!--
     <gazebo>
        <plugin name="${ns}skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>100.0</updateRate>
            <robotNamespace></robotNamespace>
            <leftFrontJoint>${ns}base_to_wheel1</leftFrontJoint>     
            <rightFrontJoint>${ns}base_to_wheel3</rightFrontJoint>
            <leftRearJoint>${ns}base_to_wheel2</leftRearJoint>
            <rightRearJoint>${ns}base_to_wheel4</rightRearJoint>
            <wheelSeparation>0.3</wheelSeparation>
            <wheelDiameter>0.1</wheelDiameter>

            <commandTopic>${ns}cmd_vel</commandTopic>
            <odometryTopic>${ns}odom</odometryTopic>
            <robotBaseFrame>${ns}base_footprint</robotBaseFrame>
            <odometryFrame>${ns}odom</odometryFrame>
            <torque>20</torque>
            <topicName>cmd_vel</topicName>
            <broadcastTF>1</broadcastTF>
            
        </plugin>
    </gazebo> 


    <gazebo reference="${ns}hokuyo_link">
        <sensor type="ray" name="head_hokuyo_sensor" >
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>30</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>scan</topicName>
                <frameName>hokuyo_link</frameName>
            </plugin>
        </sensor>
    </gazebo>
    -->
</robot>




