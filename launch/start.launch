<?xml version="1.0"?>
<launch>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find multiple_rb_ctrl)/world/warehouse.world"/> 
        <arg name="paused" value="true"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="recording" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find multiple_rb_ctrl)config.rviz" />

    <node name="occupy_node" pkg="multiple_rb_ctrl" type="new_grid_authentication" output="screen" />
    
    <!-- <group ns="robot1">
      <param name="robot_description"
              command="$(find xacro)/xacro.py $(find multiple_rb_ctrl)/urdf/model.xacro ns:=robot1 " />
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
        <param name="publish_frequency" value="100.0" />
      </node>
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model robot1 -param robot_description -x 4.5 -y 2  -z 0.05 -Y 3.14159 "/>
       <node pkg="tf" type="static_transform_publisher" name="map2rb1"
        args="0 0 0 0 0 0 map robot1/odom 100" />   
    </group>

    <group ns="robot2">
      <param name="robot_description"
            command="$(find xacro)/xacro.py $(find multiple_rb_ctrl)/urdf/model.xacro ns:=robot2" />
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
        <param name="publish_frequency" value="100.0" />
      </node>
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model robot2 -param robot_description -x 4.5 -y 1 -z 0.05 -Y 3.14159 "/>
      <node pkg="tf" type="static_transform_publisher" name="map2rb2"
        args="0 0 0 0 0 0 map robot2/odom 100" />   
    </group>

    <group ns="robot3">
      <param name="robot_description"
            command="$(find xacro)/xacro.py $(find multiple_rb_ctrl)/urdf/model.xacro ns:=robot3" />
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
        <param name="publish_frequency" value="100.0" />
      </node>
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model robot3 -param robot_description -x 4.5 -y -1.0 -z 0.05 -Y 3.14159 "/>
      <node pkg="tf" type="static_transform_publisher" name="map2rb3"
        args="0 0 0 0 0 0 map robot3/odom 100" />   
    </group> -->
    
    <group ns="robot4">
      <param name="robot_description"
            command="$(find xacro)/xacro.py $(find multiple_rb_ctrl)/urdf/model.xacro ns:=robot4" />
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
        <param name="publish_frequency" value="100.0" />
      </node>
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model robot4 -param robot_description -x 4.5 -y -2.0 -z 0.05 -Y 3.14159 "/>
      <node pkg="tf" type="static_transform_publisher" name="map2rb4"
        args="0 0 0 0 0 0 map robot4/odom 100" />   
    </group>

    
    <group ns="costmap">
        <node pkg="map_server" name="map_server" type="map_server" args="$(find multiple_rb_ctrl)/maps/eroded_map.yaml"   />
    </group>

    <group ns="origin_map">
        <node pkg="map_server" name="map_server" type="map_server" args="$(find multiple_rb_ctrl)/maps/map.yaml" />
    </group>    
     
    <node name="path_server" pkg="multiple_rb_ctrl" type="path_planning" respawn="true" />

<!--     <node name="robot1_controller" pkg="multiple_rb_ctrl" type="robot_controller" args="robot1" />
    <node name="robot2_controller" pkg="multiple_rb_ctrl" type="robot_controller" args="robot2" />
    <node name="robot3_controller" pkg="multiple_rb_ctrl" type="robot_controller" args="robot3" />
    <node name="robot4_controller" pkg="multiple_rb_ctrl" type="robot_controller" args="robot4" /> -->
    <node name="sechduler" pkg="multiple_rb_ctrl" type="sechduler"  />

</launch>
